# Copyright Vespa.ai. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vespa-configserver
spec:
  # Use three servers for proper ZooKeeper quorum:
  replicas: {{ .Values.serverReplicas }}
  selector:
    matchLabels:
      app: vespa-configserver
      name: {{ .Values.headlessName  }}
  serviceName: {{ .Values.headlessName  }}
  template:
    metadata:
      labels:
        app: vespa-configserver
        name: {{ .Values.headlessName  }}
    spec:
      initContainers:
      - name: chown-var
        securityContext:
          runAsUser: 0
        image: busybox
        command: ["sh", "-c", "chown -R 1000 /opt/vespa/var"]
        volumeMounts:
          - name: vespa-var
            mountPath: /opt/vespa/var
      - name: chown-logs
        securityContext:
          runAsUser: 0
        image: busybox
        command: ["sh", "-c", "chown -R 1000 /opt/vespa/logs"]
        volumeMounts:
          - name: vespa-logs
            mountPath: /opt/vespa/logs
      containers:
      - name: vespa-configserver
        image: vespaengine/vespa
        args: ["configserver,services"]
        imagePullPolicy: Always
        securityContext:
          runAsUser: 1000
        volumeMounts:
        - name: vespa-var
          mountPath: /opt/vespa/var
        - name: vespa-logs
          mountPath: /opt/vespa/logs
        - name: vespa-workspace
          mountPath: /workspace
        envFrom:
        - configMapRef:
            name: vespa-config
        # Note that the below are minimum resources for demo use.
        # Use 4G or more for real use cases
        resources:
          requests:
            memory: "1.5G"
          limits:
            memory: "1.5G"
  volumeClaimTemplates:
  # The below are tiny volumes for demo purposes.
  - metadata:
      name: vespa-var
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: vespa-logs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi
  - metadata:
      name: vespa-workspace
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
