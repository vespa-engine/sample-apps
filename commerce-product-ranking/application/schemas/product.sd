# Copyright Yahoo. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

schema product {

    document product {

        field locale type string {
            indexing: "en" | set_language
        }

        field id type string {
            indexing: summary | index 
            rank:filter
            match:word
        }

        field title type string {
            indexing: summary | index
            index: enable-bm25
            match:text
            weight:300
            bolding:on
        }

        field description type string {
            indexing: summary | index
            index: enable-bm25
            match:text
            weight: 200
        }

        field bullets type string {
            indexing: summary | index
            index: enable-bm25
            match:text
            weight: 200
        }

        field brand type string {
            indexing: summary | index | attribute
            match:text
            weight:100
        }

        field color type string {
            indexing: summary | index | attribute
            match:text
            weight:100
        }

    }

    field fuzzy type string {
        indexing: input title | index
        match {
            gram
            gram-size: 2
        }
    }

    field title_tokens type tensor<float>(d0[128]) {
        indexing: input title | embed tokenizer | attribute | summary
    }

    field description_tokens type tensor<float>(d0[128]) {
        indexing: input description | embed tokenizer | attribute | summary
    }

    field title_embedding type tensor(d0[384]) {
        indexing: input title | embed title | attribute | summary
        attribute {
            distance-metric: angular 
        }
    }
    field description_embedding type tensor(d0[384]) {
        indexing: input description | embed description | attribute | summary
        attribute {
            distance-metric: angular 
        }
    }

    fieldset default {
        fields: title, description, bullets, brand, color 
    }

    onnx-model title_cross {
      file: models/title_ranker.onnx
      input input_ids: title_input_ids
      input attention_mask: title_attention_mask
      input token_type_ids: title_token_type_ids
    }

    rank-profile default {
        inputs {
            query(query_tokens) tensor<float>(d0[32])
            query(q_title) tensor<float>(d0[384])
            query(q_description) tensor<float>(d0[384])
            query(q_bullets) tensor<float>(d0[384])
        } 
    }

    rank-profile random inherits default {
        first-phase {
            expression: random 
        }
    }

    rank-profile bm25 inherits default {
        first-phase {
            expression: bm25(title) + bm25(description)
        }
    }

    rank-profile nativeRank inherits default {
        first-phase {
            expression: nativeRank(title) + nativeRank(description)
        }
    }

    rank-profile fieldMatch inherits default {
        first-phase {
            expression: fieldMatch(title) + fieldMatch(description)
        }
    }

    rank-profile semantic-title inherits default {
        first-phase {
            expression: closeness(field, title_embedding)
        }
    } 

    rank-profile semantic-description inherits default {
        first-phase {
            expression: closeness(field, description_embedding)
        }
    } 

    rank-profile cross-title inherits default {

        function title_input_ids() {
            expression: tokenInputIds(96, query(query_tokens), attribute(title_tokens))
        }

        function title_token_type_ids() {
            expression: tokenTypeIds(96, query(query_tokens), attribute(title_tokens))
        }

        function title_attention_mask() {
            expression: tokenAttentionMask(96, query(query_tokens), attribute(title_tokens)) 
        }

        function cross() {
            expression: onnx(title_cross){d0:0,d1:0} 
        }
        first-phase {
            expression: cross() 
        }
    } 
}
