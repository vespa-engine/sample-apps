shared:
  settings:
    email:
      addresses: [kraune@yahooinc.com,bergum@yahooinc.com]
      statuses: [SUCCESS, FAILURE]

jobs:
  link-checker-sample-apps:
    requires: [~pr, ~commit]
    image: ruby:2.6
    environment:
      USER_SHELL_BIN: bash
    steps:
      - install: |
          gem install bundler
          export LANG=C.UTF-8
          bundle install
      - add-front-matter-for-processing: |
          find . -not -path './_site/*' -name \*.md | \
            while read f; do (echo -e "---\nrender_with_liquid: false\n---\n"; cat ${f})>${f}.new; mv ${f}.new ${f}; done
          find . -not -path './_site/*' -name services.xml -or -name hosts.xml -or -name deployment.xml | \
            while read f; do (echo -e "---\nrender_with_liquid: false\n---\n"; cat ${f})>${f}.new; mv ${f}.new ${f}; done
          find . -not -path './_site/*' -name \*.java | \
            while read f; do (echo -e "---\nrender_with_liquid: false\n---\n"; cat ${f})>${f}.new; mv ${f}.new ${f}; done
      - generate-links-from-code-files: |
          bundle exec jekyll build -p _plugins-linkcheck
      - build-site: |
          bundle exec jekyll build
          mv links-to-check.html _site
          echo "Broken links in links-to-check.html are extracted from services/hosts/deployment.xml in the sample apps,"
          echo "as well as links in javadoc."
          echo "Search for broken links in these files."
      - check-links: |
          bundle exec htmlproofer \
            --assume-extension --empty-alt-ignore \
            --typhoeus-config '{"connecttimeout": 10, "timeout": 30}' \
            --directory-index-file README.html \
            --url-ignore 'src/main/application/schemas/wiki.sd#L80,/localhost:8080/,src/main/application/search/query-profiles' \
            --file-ignore '/tensor-playground/src/main/resources/playground/,/src/main/resources/site/index.html/,/dense-passage-retrieval-with-ann/src/main/resources/frontend/index.html/' \
            --url-swap 'README.md:README.html,Code-of-Conduct.md:Code-of-Conduct.html,document-ranking.md:document-ranking.html,passage-ranking.md:passage-ranking.html,colbert-performance-scaling.md:colbert-performance-scaling.html,experiment-yourself.md:experiment-yourself.html,feeding.md:feeding.html' \
            --http-status-ignore "429" \
            _site

  build-apps:
    requires: [~pr, ~commit]
    image: vespaengine/vespa-pipeline
    steps:
      - build: |
          set -e
          source /etc/profile.d/jdk-env.sh
          mvn -V --batch-mode --no-snapshot-updates install

  verify-guides:
    requires: [~commit]
    secrets:
      - VESPA_TEAM_API_KEY
    image: buildpack-deps
    environment:
      USER_SHELL_BIN: bash
    annotations:
      screwdriver.cd/cpu: TURBO
      screwdriver.cd/ram: TURBO
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/timeout: 60 # Normally takes 30 minutes
      screwdriver.cd/buildPeriodically: H H(0-5) * * 1-5 # some time between 12:00 AM UTC (midnight) to 5:59 AM UTC Mon-Fri
    steps:
      - install-deps: |
          apt update
          apt install -y docker.io zstd maven zip unzip python3-pip net-tools bundler
          python3 -m pip install -qqq -r test/requirements.txt --user
          VESPA_CLI_VERSION=$(curl -fsSL https://api.github.com/repos/vespa-engine/vespa/releases/latest | grep -Po '"tag_name": "v\K.*?(?=")') && \
            curl -fsSL https://github.com/vespa-engine/vespa/releases/download/v${VESPA_CLI_VERSION}/vespa-cli_${VESPA_CLI_VERSION}_linux_amd64.tar.gz | tar -zxf - -C /opt && \
            ln -sf /opt/vespa-cli_${VESPA_CLI_VERSION}_linux_amd64/bin/vespa /usr/local/bin/
      - run-tests: |
          export VESPA_TEAM_API_KEY
          cd $SD_DIND_SHARE_PATH
          $SD_SOURCE_DIR/test/test.py -c $SD_SOURCE_DIR/test/_test_config.yml

  verify-guides-big:
    requires: [~commit]
    secrets:
      - VESPA_TEAM_API_KEY
    image: buildpack-deps
    environment:
      USER_SHELL_BIN: bash
    annotations:
      screwdriver.cd/cpu: TURBO
      screwdriver.cd/ram: TURBO
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/timeout: 30
      screwdriver.cd/buildPeriodically: H H(0-5) * * 1-5 # some time between 12:00 AM UTC (midnight) to 5:59 AM UTC Mon-Fri
    steps:
      - install-deps: |
          apt update
          apt install -y docker.io zstd maven zip unzip python3-pip net-tools bundler
          python3 -m pip install -qqq -r test/requirements.txt --user
          VESPA_CLI_VERSION=$(curl -fsSL https://api.github.com/repos/vespa-engine/vespa/releases/latest | grep -Po '"tag_name": "v\K.*?(?=")') && \
            curl -fsSL https://github.com/vespa-engine/vespa/releases/download/v${VESPA_CLI_VERSION}/vespa-cli_${VESPA_CLI_VERSION}_linux_amd64.tar.gz | tar -zxf - -C /opt && \
            ln -sf /opt/vespa-cli_${VESPA_CLI_VERSION}_linux_amd64/bin/vespa /usr/local/bin/
      - run-tests: |
          export VESPA_TEAM_API_KEY
          cd $SD_DIND_SHARE_PATH
          $SD_SOURCE_DIR/test/test.py -c $SD_SOURCE_DIR/test/_test_config_big.yml
