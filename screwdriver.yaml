shared:
  settings:
    email:
      addresses: [kraune@yahooinc.com,bergum@yahooinc.com]
      statuses: [SUCCESS, FAILURE]
  environment:
    USER_SHELL_BIN: bash
  annotations:
    install-deps: &install-deps
      install-deps: |
        dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo
        dnf -y install docker-ce protobuf-compiler protobuf-devel wget --nobest
        python3 -m pip install --upgrade pip
        python3 -m pip install -qqq -r test/requirements.txt --user
        python3 -m pip install --upgrade -qqq pytest nbmake onnx onnxruntime torch numpy transformers 
        python3 -m pip install --upgrade -qqq pytest nbmake onnx onnxruntime torch numpy transformers --user
        VESPA_CLI_VERSION=$(curl -fsSL https://api.github.com/repos/vespa-engine/vespa/releases/latest | grep -Po '"tag_name": "v\K.*?(?=")') && \
          curl -fsSL https://github.com/vespa-engine/vespa/releases/download/v${VESPA_CLI_VERSION}/vespa-cli_${VESPA_CLI_VERSION}_linux_amd64.tar.gz | tar -zxf - -C /opt && \
          ln -sf /opt/vespa-cli_${VESPA_CLI_VERSION}_linux_amd64/bin/vespa /usr/local/bin/

jobs:
  link-checker-sample-apps:
    requires: [~pr, ~commit]
    image: ruby:2.6
    annotations:
      screwdriver.cd/buildPeriodically: H H(0-5) * * 1-5 # some time between 12:00 AM UTC (midnight) to 5:59 AM UTC Mon-Fri
    steps:
      - install: |
          gem install bundler
          export LANG=C.UTF-8
          bundle install
      - add-front-matter-for-processing: |
          find . -not -path './_site/*' -name \*.md | \
            while read f; do (echo -e "---\nrender_with_liquid: false\n---\n"; cat ${f})>${f}.new; mv ${f}.new ${f}; done
          find . -not -path './_site/*' -name services.xml -or -name hosts.xml -or -name deployment.xml | \
            while read f; do (echo -e "---\nrender_with_liquid: false\n---\n"; cat ${f})>${f}.new; mv ${f}.new ${f}; done
          find . -not -path './_site/*' -name \*.java -or -not -path './_site/*' -name \*.sd | \
            while read f; do (echo -e "---\nrender_with_liquid: false\n---\n"; cat ${f})>${f}.new; mv ${f}.new ${f}; done
      - generate-links-from-code-files: |
          bundle exec jekyll build -p _plugins-linkcheck
      - build-site: |
          bundle exec jekyll build
          mv links-to-check.html _site
          echo "Broken links in links-to-check.html are extracted from services/hosts/deployment.xml in the sample apps,"
          echo "as well as links in javadoc."
          echo "Search for broken links in these files."
      - check-links: |
          bundle exec htmlproofer \
            --assume-extension --check-html --check-external-hash \
            --typhoeus '{"connecttimeout": 10, "timeout": 30, "followlocation": false}' \
            --hydra '{"max_concurrency": 1}' \
            --directory-index-file README.html \
            --url-ignore 'src/main/application/schemas/wiki.sd#L80,/localhost:8080/,src/main/application/search/query-profiles' \
            --file-ignore '/tensor-playground/src/main/resources/playground/,/src/main/resources/site/index.html/,/dense-passage-retrieval-with-ann/src/main/resources/frontend/index.html/' \
            --url-swap 'README.md:README.html,Code-of-Conduct.md:Code-of-Conduct.html,document-ranking-README.md:document-ranking-README.html,passage-ranking-README.md:passage-ranking-README.html,colbert-performance-scaling-README.md:colbert-performance-scaling-README.html,experiment-yourself.md:experiment-yourself.html,feeding.md:feeding.html,benchmarking-README.md:benchmarking-README.html' \
            _site

  build-apps:
    requires: [~pr, ~commit]
    image: vespaengine/vespa-build-centos-stream8:latest
    annotations:
      screwdriver.cd/cpu: HIGH
      screwdriver.cd/ram: HIGH
    steps:
      - build: |
          set -e
          mvn -V --batch-mode --no-snapshot-updates install

  verify-guides:
    requires: [~pr, ~commit]
    sourcePaths: ["!billion-scale-vector-search/", "!billion-scale-image-search/", "!screwdriver.yml", "!examples/model-deployment/"]
    image: vespaengine/vespa-build-centos-stream8:latest
    annotations:
      screwdriver.cd/cpu: TURBO
      screwdriver.cd/ram: TURBO
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/timeout: 180
      screwdriver.cd/buildPeriodically: H H(0-5) * * 1-5 # some time between 12:00 AM UTC (midnight) to 5:59 AM UTC Mon-Fri
    steps:
      - *install-deps
      - run-tests: |
          cd $SD_DIND_SHARE_PATH
          $SD_SOURCE_DIR/test/test.py -w $SD_SOURCE_DIR -c $SD_SOURCE_DIR/test/_test_config.yml

  verify-billion-scale-vector-search:
    requires: [~pr, ~commit]
    sourcePaths: ["billion-scale-vector-search/"]
    image: vespaengine/vespa-build-centos-stream8:latest
    annotations:
      screwdriver.cd/cpu: TURBO
      screwdriver.cd/ram: TURBO
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/timeout: 180
      screwdriver.cd/buildPeriodically: H H(0-5) * * 1-5 # some time between 12:00 AM UTC (midnight) to 5:59 AM UTC Mon-Fri
    steps:
      - *install-deps
      - run-tests: |
          cd $SD_DIND_SHARE_PATH
          $SD_SOURCE_DIR/test/test.py -w $SD_SOURCE_DIR $SD_SOURCE_DIR/billion-scale-vector-search/README.md

  verify-billion-scale-image-search:
    requires: [~pr, ~commit]
    sourcePaths: ["billion-scale-image-search/"]
    image: vespaengine/vespa-build-centos-stream8:latest
    annotations:
      screwdriver.cd/cpu: TURBO
      screwdriver.cd/ram: TURBO
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/timeout: 180
      screwdriver.cd/buildPeriodically: H H(0-5) * * 1-5 # some time between 12:00 AM UTC (midnight) to 5:59 AM UTC Mon-Fri
    steps:
      - *install-deps
      - run-tests: |
          cd $SD_DIND_SHARE_PATH
          $SD_SOURCE_DIR/test/test.py -w $SD_SOURCE_DIR $SD_SOURCE_DIR/billion-scale-image-search/README.md

  verify-examples-model-deployment:
    requires: [~pr, ~commit]
    sourcePaths: ["examples/model-deployment/"]
    image: python:3.10.7
    annotations:
      screwdriver.cd/cpu: TURBO
      screwdriver.cd/ram: TURBO
      screwdriver.cd/dockerEnabled: true
      screwdriver.cd/dockerCpu: TURBO
      screwdriver.cd/dockerRam: TURBO
      screwdriver.cd/timeout: 180
      screwdriver.cd/buildPeriodically: H H(0-5) * * 1-5 # some time between 12:00 AM UTC (midnight) to 5:59 AM UTC Mon-Fri
    steps:
      - run-tests: |
          python3 -m pip install --upgrade pip
          python3 -m pip install -qqq -r test/requirements.txt --user
          python3 -m pip install --upgrade -qqq pytest nbmake
          $SD_SOURCE_DIR/test/test.py -w $SD_SOURCE_DIR $SD_SOURCE_DIR/examples/model-deployment/README.md
